@import url(./wind/font.css);
@include-when-export url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,400;0,700;1,400;1,700&display=swap');

:root {
	--text-color: #37352f;
	--blockquote-text-color: var(--text-color);
	--blockquote-accent-color: var(--text-color);
	--blockquote-bg-color: #f7f7f7;
}

html {
	font-size: 17px;
}

html, body {
	margin: auto;
	background: #fefefe;
	-webkit-font-smoothing: antialiased;
}
body {
	font-family: var(--text-font) !important;
	color: #333;
	line-height: 1.4;
	text-align: justify;
}

#write {
	max-width: 960px;
	margin: 0 auto;
	margin-bottom: 2em;
	line-height: 1.53;
	padding-top: 40px;
}

@media only screen and (min-width: 1400px) {
	#write {
		max-width: 1100px;
	}
}

@media print {
	html {
		font-size: 13px;
	}
}

/* Typography
-------------------------------------------------------- */

#write>h1:first-child,
h1 {
	margin-top: 1.6em;
	font-weight: normal;
}

h1 {
	font-size:3em;
}

h2 {
	margin-top:2em;
	font-weight: normal;
}

h3 {
	font-weight: normal;
	margin-top: 3em;
}

h1,
h2,
h3{
	text-align: center;
}

h2:after{
	border-bottom: 1px solid #2f2f2f;
    content: '';
    width: 100px;
    display: block;
    margin: 0 auto;
    height: 1px;
}

h1+h2, h2+h3 {
	margin-top: 0.83em;
}

p,
.mathjax-block {
	margin-top: 0;
	-webkit-hypens: auto;
	-moz-hypens: auto;
	hyphens: auto;
}
ul {
	list-style: square;
}

@media print {
	ol {
		padding-left: 40px;
	}
}

blockquote {
	color: var(--blockquote-text-color);
	margin-left: 1.75px;
	margin-right: 0px;
	border-left: 4px solid var(--blockquote-accent-color);
	padding: 10px 14px 7px 22px;
	/* change the quote highlight */
	background-color: var(--blockquote-bg-color);
}

code,
pre {
	font-family: var(--text-font) !important;
	font-size: .9em;
	background: white;
}
.md-fences{
	padding-left: 1em;
	border: 1px solid #ddd;
	padding-bottom: 8px;
	padding-top: 6px;
	margin-bottom: 1.5em;
}

/*链接与文本保持一致，拒绝花里花哨*/
a {
	color: #373d3f;
	outline: none;
	text-decoration: underline;
	padding-bottom: 2px;
}

a img {
	border: none;
}
h1 a,
h1 a:hover {
	color: #333;
	text-decoration: none;
}
hr {
	color: #ddd;
	height: 1px;
	margin: 2em 0;
	border-top: solid 1px #ddd;
	border-bottom: none;
	border-left: 0;
	border-right: 0;
}
.ty-table-edit {
	background: #ededed;
    padding-top: 4px;
}
table {
	margin-bottom: 1.333333rem
}
table th,
table td {
	padding: 8px;
	line-height: 1.333333rem;
	vertical-align: top;
	border-top: 1px solid #ddd
}
table th {
	font-weight: bold
}
table thead th {
	vertical-align: bottom
}
table caption+thead tr:first-child th,
table caption+thead tr:first-child td,
table colgroup+thead tr:first-child th,
table colgroup+thead tr:first-child td,
table thead:first-child tr:first-child th,
table thead:first-child tr:first-child td {
	border-top: 0
}
table tbody+tbody {
	border-top: 2px solid #ddd
}

.task-list{
	padding:0;
}

.md-task-list-item {
	padding-left: 1.6rem;
}

.md-task-list-item > input:before {
	content: '\221A';
	display: inline-block;
	width: 1.33333333rem;
  	height: 1.6rem;
	vertical-align: middle;
	text-align: center;
	color: #ddd;
	background-color: #fefefe;
}

.md-task-list-item > input:checked:before,
.md-task-list-item > input[checked]:before{
	color: inherit;
}
.md-tag {
	color: inherit;
	font: inherit;
}
#write pre.md-meta-block {
	min-height: 35px;
	padding: 0.5em 1em;
}
#write pre.md-meta-block {
	white-space: pre;
	background: #f8f8f8;
	border: 0px;
	color: #999;

	width: 100vw;
	max-width: calc(100% + 60px);
	margin-left: -30px;
	border-left: 30px #f8f8f8 solid;
	border-right: 30px #f8f8f8 solid;

	margin-bottom: 2em;
	margin-top: -1.3333333333333rem;
	padding-top: 26px;
	padding-bottom: 10px;
	line-height: 1.8em;
	font-size: 0.9em;
	font-size: 0.76em;
	padding-left: 0;
}
.md-img-error.md-image>.md-meta{
	vertical-align: bottom;
}
#write>h5.md-focus:before {
	top: 2px;
}

.md-toc {
	margin-top: 40px;
}

.md-toc-content {
	padding-bottom: 20px;
}

/*大纲展开和搜索显示*/
.outline-expander:before {
	color: inherit;
	font-size: 8px;
	top: auto;
	content: "\f125";
}

.outline-expander:hover:before {
	content: "\f125";
}

.outline-item-open>.outline-item>.outline-expander:before {
  	content: "\f123";
}

/** source code mode */
#typora-source {
	font-family: var(--text-font) !important;
    color: #6A6A6A;
}

/*边栏*/
#typora-sidebar {
	font-size: 15px;
}

.html-for-mac #typora-sidebar {
    -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, .175);
    box-shadow: 0 6px 12px rgba(0, 0, 0, .175);
}

.cm-s-typora-default .cm-header,
.cm-s-typora-default .cm-property,
.CodeMirror.cm-s-typora-default div.CodeMirror-cursor {
	color: #428bca;
}

.cm-s-typora-default .cm-atom, .cm-s-typora-default .cm-number {
	color: #777777;
}

.typora-node .file-list-item-parent-loc,
.typora-node .file-list-item-time,
.typora-node .file-list-item-summary {
	font-family: var(--text-font) !important;
}

/*使勾选框和列表项对齐*/
.md-task-list-item>input {
    margin-left: -1.3em;
    margin-top: 2px;
}

.md-mathjax-midline {
	background: #fafafa;
}

.md-fences .code-tooltip {
	bottom: -2em !important;
}

.dropdown-menu .divider {
	border-color: #e5e5e5;
}

/*图片*/
img {
	border: 1px rgba(0, 0, 0, 0.06) solid !important;
	box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
}

/*内嵌网页*/
iframe {
	border: 1px rgba(0, 0, 0, 0.06) solid;
	box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
}

.md-rawblock-on-edit>.md-rawblock-tooltip, .md-rawblock:hover>.md-rawblock-container, .md-rawblock:hover>.md-rawblock-tooltip {
	background: inherit !important;
}

/*增加大纲序列号*/
.sidebar-content {
	counter-reset: h1
}

.outline-h1 {
	counter-reset: h2
}

.outline-h2 {
	counter-reset: h3
}

.outline-h3 {
	counter-reset: h4
}

.outline-h4 {
	counter-reset: h5
}

.outline-h5 {
	counter-reset: h6
}

.outline-h1>.outline-item>.outline-label:before {
	counter-increment: h1;
	content: counter(h1) ". "
}

.outline-h2>.outline-item>.outline-label:before {
	counter-increment: h2;
	content: counter(h1) "." counter(h2) ". "
}

.outline-h3>.outline-item>.outline-label:before {
	counter-increment: h3;
	content: counter(h1) "." counter(h2) "." counter(h3) ". "
}

.outline-h4>.outline-item>.outline-label:before {
	counter-increment: h4;
	content: counter(h1) "." counter(h2) "." counter(h3) "." counter(h4) ". "
}

.outline-h5>.outline-item>.outline-label:before {
	counter-increment: h5;
	content: counter(h1) "." counter(h2) "." counter(h3) "." counter(h4) "." counter(h5) ". "
}

.outline-h6>.outline-item>.outline-label:before {
	counter-increment: h6;
	content: counter(h1) "." counter(h2) "." counter(h3) "." counter(h4) "." counter(h5) "." counter(h6) ". "
}
